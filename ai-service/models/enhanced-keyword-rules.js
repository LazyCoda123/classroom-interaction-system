// ai-service/models/enhanced-keyword-rules.js
// 增强版智能分类关键词规则配置 - 专为中文教育场景优化

const keywordRules = {
    1: { // 知识点定义类问题
      id: 1,
      name: '知识点定义类问题',
      description: '关于概念、定义、含义、原理的问题',
      keywords: [
        // 直接询问类
        '是什么', '什么是', '定义', '概念', '含义', '意思', '意义',
        '怎么理解', '如何理解', '理解', '解释', '说明', '阐述',
        '表示什么', '代表什么', '指的是什么', '叫什么',
        
        // 学术定义类  
        '定义式', '公式', '表达式', '定律', '原理', '法则',
        '基本概念', '基础知识', '理论', '学说', '观念',
        '数学表达式', '物理意义', '化学性质', '生物特征',
        
        // 疑问词组合
        '的定义', '的概念', '的含义', '的意思', '的原理',
        '的本质', '的实质', '的性质', '的特点', '的特征',
        
        // 深入理解类
        '本质上', '从本质上', '实质上', '根本上',
        '物理意义', '几何意义', '代数意义', '化学意义',
        '为什么叫', '为什么称为', '命名原因',
        
        // 学科专业术语
        '推导', '证明', '推理过程', '来源', '起源',
        '历史背景', '发现过程', '提出者'
      ],
      weight: 1.3, // 增加权重，定义类问题很重要
      priority: 1,
      
      // 新增：语义模式
      semanticPatterns: [
        /什么(是|叫|叫做).+/,
        /(.+)是什么/,
        /(.+)的(定义|概念|含义|意思)/,
        /如何(理解|解释|定义).+/,
        /(.+)指的是/
      ],
      
      // 新增：排除模式（避免误判）
      excludePatterns: [
        /怎么(用|做|算|计算|求解)/,
        /如何(应用|使用|操作)/,
        /有什么(区别|不同|联系)/
      ]
    },
    
    2: { // 知识点应用类问题  
      id: 2,
      name: '知识点应用类问题',
      description: '关于具体应用、计算、使用方法、解题的问题',
      keywords: [
        // 使用方法类
        '怎么用', '如何使用', '如何应用', '怎么应用', '怎样应用',
        '用法', '使用', '应用', '运用', '利用', '采用',
        '使用方法', '应用方法', '使用技巧', '应用技巧',
        
        // 计算解题类
        '计算', '求解', '解题', '怎么算', '如何计算', '怎样计算',
        '怎么求', '如何求', '求出', '算出', '得出', '解出',
        '计算方法', '求解过程', '解题步骤', '计算步骤',
        '求解技巧', '计算技巧', '解题技巧',
        
        // 方法技巧类
        '方法', '步骤', '过程', '流程', '程序', '途径',
        '用在', '适用于', '解决', '处理', '分析',
        '怎么解决', '如何解决', '怎样处理',
        
        // 实际应用场景
        '实际中', '现实中', '生活中', '工程中', '实践中',
        '应用到', '用于', '用来', '可以用来',
        '在...中的应用', '的应用', '的用途',
        
        // 具体操作类
        '操作', '执行', '实施', '进行', '开展',
        '具体怎么', '具体如何', '详细步骤',
        
        // 结果导向类
        '得到', '获得', '求得', '计算出', '推算出',
        '结果是', '答案是', '等于多少'
      ],
      weight: 1.2,
      priority: 2,
      
      semanticPatterns: [
        /怎么(用|使用|应用|计算|求|算|解)/,
        /如何(用|使用|应用|计算|求|算|解)/,
        /(.+)怎么(用|算|求|解)/,
        /用(.+)来(.+)/,
        /(.+)的(计算|求解|应用)方法/
      ],
      
      excludePatterns: [
        /(.+)是什么/,
        /什么是(.+)/,
        /有什么(区别|不同|联系|关系)/
      ]
    },
    
    3: { // 知识点关联类问题
      id: 3,
      name: '知识点关联类问题', 
      description: '关于对比、区别、联系、关系的问题',
      keywords: [
        // 对比类
        '区别', '不同', '差异', '差别', '有什么区别', '有何区别',
        '对比', '比较', '相比', '比起', '对照', '比对',
        '两者区别', '之间的区别', '有何不同',
        
        // 联系类
        '联系', '关系', '相关', '关联', '有什么联系', '有何联系',
        '关系是', '之间的关系', '相互关系', '内在联系',
        '关联性', '相关性', '相互影响', '相互作用',
        
        // 异同类
        '异同', '相同', '一样', '类似', '相似', '近似',
        '共同点', '不同点', '相同点', '差异点',
        '相同之处', '不同之处', '相似之处',
        
        // 比较深度分析
        '优缺点', '优势', '劣势', '优点', '缺点',
        '各自特点', '各有什么', '分别是',
        '本质区别', '主要区别', '根本区别',
        
        // 分类归纳类
        '属于', '归类', '分类', '种类', '类型',
        '是否属于', '算不算', '可以看作',
        
        // 逻辑关系类
        '因果关系', '条件关系', '包含关系',
        '必要条件', '充分条件', '等价关系',
        '互为', '相互', '彼此', '两者'
      ],
      weight: 1.1,
      priority: 3,
      
      semanticPatterns: [
        /(.+)和(.+)(有什么|有何)(区别|不同|联系|关系)/,
        /(.+)(与|和)(.+)(区别|不同|联系|关系)/,
        /(.+)(相比|比较|对比)(.+)/,
        /(.+)(类似|相似|一样|相同)(.+)/,
        /(.+)(属于|算)(.+)/
      ],
      
      excludePatterns: [
        /怎么(用|做|算|计算)/,
        /如何(应用|使用|计算)/,
        /(.+)是什么/
      ]
    },
    
    4: { // 实验操作类问题
      id: 4,
      name: '实验操作类问题',
      description: '关于实验、操作、步骤、实践的问题', 
      keywords: [
        // 实验类
        '实验', '实验步骤', '实验过程', '实验方法', '实验操作',
        '实验现象', '实验结果', '实验原理', '实验设计',
        '实验装置', '实验器材', '实验仪器', '实验条件',
        '做实验', '进行实验', '实验怎么做',
        
        // 操作类
        '操作', '操作步骤', '如何操作', '操作方法', '操作流程',
        '操作过程', '具体操作', '详细操作', '操作要点',
        '操作注意事项', '操作技巧',
        
        // 实践类  
        '步骤', '过程', '实践', '动手', '演示', '示范',
        '制作', '搭建', '组装', '调试', '安装',
        '测量', '观察', '记录', '检测', '验证',
        
        // 实验相关动词
        '加热', '冷却', '混合', '分离', '提取',
        '测试', '检验', '化验', '分析', '探究',
        '观测', '监测', '探测', '检查',
        
        // 实验环境和条件
        '环境', '条件', '温度', '压力', '浓度',
        '器材', '仪器', '设备', '装置', '工具',
        '材料', '试剂', '样品', '标本',
        
        // 实验结果和现象
        '现象', '结果', '数据', '记录', '观察',
        '效果', '反应', '变化', '表现'
      ],
      weight: 1.4, // 实验类问题权重更高，很重要
      priority: 2,
      
      semanticPatterns: [
        /(实验|操作)(怎么|如何)(做|进行|操作)/,
        /(.+)(实验|操作)(步骤|过程|方法)/,
        /如何(做|进行|完成)(.+)(实验|操作)/,
        /(.+)(器材|仪器|装置)/,
        /观察(.+)(现象|结果)/
      ],
      
      excludePatterns: [
        /(.+)是什么/,
        /什么是(.+)/,
        /有什么(区别|联系)/,
        /怎么(理解|解释)/
      ]
    },
    
    5: { // 解题方法类问题
      id: 5,
      name: '解题方法类问题',
      description: '关于解题技巧、思路、方法、策略的问题',
      keywords: [
        // 技巧类
        '技巧', '窍门', '诀窍', '秘诀', '妙招', '绝招',
        '解题技巧', '解题方法', '解题思路', '解题策略',
        '做题技巧', '做题方法', '答题技巧',
        
        // 方法类
        '方法', '思路', '策略', '套路', '模式', '规律',
        '有没有', '还有', '更好的', '简单的', '快速的',
        '解法', '做法', '办法', '途径', '渠道',
        
        // 效率类
        '快速', '简便', '简单', '容易', '高效', '便捷',
        '省时', '节省时间', '提高效率', '快捷',
        '简化', '简便方法', '捷径',
        
        // 学习方法类
        '学习方法', '记忆方法', '理解方法',
        '掌握', '熟练', '精通', '提高',
        '学会', '会做', '搞懂', '弄清楚',
        
        // 问题解决类
        '解决', '克服', '应对', '处理', '对付',
        '遇到困难', '不会做', '做不出',
        '卡住了', '想不出', '没思路',
        
        // 经验总结类
        '经验', '心得', '体会', '感悟', '总结',
        '规律', '特点', '特征', '模式',
        '注意事项', '易错点', '关键点',
        
        // 提升改进类
        '提升', '改进', '优化', '完善',
        '更好', '更快', '更准', '更简单'
      ],
      weight: 1.2,
      priority: 4,
      
      semanticPatterns: [
        /(有没有|有什么)(技巧|方法|窍门|诀窍)/,
        /(.+)(怎么|如何)(学|做|掌握)/,
        /(更好的|简单的|快速的)(方法|技巧|办法)/,
        /解(.+)(题|法|方法)/,
        /(学习|解题|做题)(方法|技巧|思路)/
      ],
      
      excludePatterns: [
        /(.+)是什么/,
        /什么是(.+)/,
        /(实验|操作)步骤/,
        /有什么(区别|联系)/
      ]
    },
    
    6: { // 其他类问题
      id: 6,
      name: '其他类问题',
      description: '无法归类的其他问题、闲聊、非学术内容',
      keywords: [
        // 一般性词汇
        '其他', '不确定', '杂项', '随便', '无关', '不知道',
        
        // 闲聊类
        '闲聊', '聊天', '问候', '你好', '谢谢', '再见',
        '早上好', '下午好', '晚上好', '辛苦了',
        '天气', '今天', '明天', '昨天',
        
        // 情感表达
        '喜欢', '讨厌', '高兴', '开心', '难过', '生气',
        '有趣', '无聊', '困难', '简单',
        
        // 非学术内容
        '吃饭', '睡觉', '游戏', '娱乐', '电影', '音乐',
        '运动', '旅游', '购物', '朋友',
        
        // 系统功能相关（非学科问题）
        '系统', '功能', '软件', '程序', '界面',
        '登录', '注册', '密码', '账号',
        
        // 表达不确定
        '可能', '大概', '应该', '也许', '估计',
        '不太清楚', '不太懂', '不明白'
      ],
      weight: 0.3, // 最低权重
      priority: 6,   // 最低优先级
      
      semanticPatterns: [
        /^(你好|谢谢|再见)/,
        /(天气|吃饭|睡觉|游戏)/,
        /^(嗯|哦|啊|呃)/,
        /(喜欢|讨厌|高兴|难过)/
      ],
      
      excludePatterns: [] // 兜底分类，无排除模式
    }
  };
  
  // 大幅扩展学科关键词库 - 覆盖更多教育场景
  const subjectKeywords = {
    physics: {
      // 力学
      mechanics: [
        '力', '重力', '弹力', '摩擦力', '支持力', '拉力', '压力',
        '运动', '速度', '加速度', '位移', '路程', '时间',
        '牛顿定律', '牛顿第一定律', '牛顿第二定律', '牛顿第三定律',
        '动量', '动量守恒', '冲量', '能量', '动能', '势能',
        '机械能', '功', '功率', '效率',
        '圆周运动', '向心力', '向心加速度', '离心力',
        '简谐运动', '振动', '波动', '频率', '周期', '振幅'
      ],
      
      // 热学
      thermodynamics: [
        '热', '温度', '热量', '内能', '焓', '熵',
        '压强', '体积', '密度', '气体', '液体', '固体',
        '热力学定律', '热传递', '传导', '对流', '辐射',
        '相变', '熔化', '凝固', '汽化', '液化', '升华', '凝华',
        '理想气体', '气体定律', '状态方程'
      ],
      
      // 电磁学
      electromagnetism: [
        '电', '电荷', '电场', '电场强度', '电势', '电势差',
        '电流', '电阻', '电压', '电功率', '电功',
        '欧姆定律', '基尔霍夫定律', '电路', '串联', '并联',
        '磁', '磁场', '磁感应强度', '磁通量', '电磁感应',
        '法拉第定律', '楞次定律', '自感', '互感',
        '交流电', '直流电', '变压器', '发电机', '电动机'
      ],
      
      // 光学
      optics: [
        '光', '光线', '光速', '光的传播', '直线传播',
        '反射', '折射', '全反射', '折射率', '临界角',
        '透镜', '凸透镜', '凹透镜', '焦点', '焦距',
        '成像', '实像', '虚像', '放大率',
        '干涉', '衍射', '偏振', '色散',
        '波长', '频率', '波速', '光谱'
      ],
      
      // 现代物理
      modern: [
        '原子', '原子核', '电子', '质子', '中子',
        '量子', '量子力学', '波粒二象性', '不确定性原理',
        '相对论', '狭义相对论', '广义相对论',
        '核反应', '核衰变', '放射性', '半衰期',
        '光电效应', '康普顿效应', '黑体辐射'
      ]
    },
    
    mathematics: {
      // 代数
      algebra: [
        '方程', '一元一次方程', '一元二次方程', '线性方程组',
        '不等式', '函数', '一次函数', '二次函数', '反比例函数',
        '指数函数', '对数函数', '三角函数',
        '数列', '等差数列', '等比数列', '求和公式',
        '因式分解', '配方法', '公式法', '十字相乘法'
      ],
      
      // 几何
      geometry: [
        '点', '线', '面', '角', '三角形', '四边形', '圆',
        '平行线', '垂直线', '相似', '全等',
        '面积', '周长', '体积', '表面积',
        '勾股定理', '正弦定理', '余弦定理',
        '立体几何', '空间几何', '向量', '坐标系'
      ],
      
      // 统计与概率
      statistics: [
        '统计', '概率', '随机事件', '频率', '期望值',
        '方差', '标准差', '正态分布', '回归分析',
        '抽样', '调查', '数据', '图表', '平均数', '中位数', '众数'
      ]
    },
    
    chemistry: {
      // 无机化学
      inorganic: [
        '元素', '原子', '分子', '离子', '化合价',
        '周期表', '金属', '非金属', '酸', '碱', '盐',
        '氧化还原反应', '化合反应', '分解反应', '置换反应',
        '电解质', '非电解质', '溶液', '溶解度', 'pH值'
      ],
      
      // 有机化学
      organic: [
        '烷烃', '烯烃', '炔烃', '苯', '醇', '酚', '醛', '酮',
        '羧酸', '酯', '氨基酸', '蛋白质', '糖类', '脂肪',
        '同分异构体', '官能团', '聚合反应', '水解反应'
      ]
    },
    
    biology: {
      // 细胞生物学
      cell: [
        '细胞', '细胞膜', '细胞壁', '细胞核', '细胞质',
        '叶绿体', '线粒体', '核糖体', 'DNA', 'RNA',
        '蛋白质', '酶', '新陈代谢', '呼吸作用', '光合作用'
      ],
      
      // 遗传学
      genetics: [
        '遗传', '基因', '染色体', '等位基因', '显性', '隐性',
        '分离定律', '自由组合定律', '连锁', '交换',
        '突变', '变异', '进化', '自然选择'
      ]
    }
  };
  
  // 扩展否定词列表 - 更全面的否定表达
  const negativeWords = [
    // 基础否定
    '不是', '不', '没有', '没', '无', '非', '未', '否',
    '不会', '不能', '不对', '不行', '不可以',
    '错误', '不正确', '不对的', '不准确',
    
    // 程度否定
    '不太', '不很', '不够', '不多', '不少',
    '不怎么', '不那么', '不这么',
    
    // 完全否定
    '完全不', '根本不', '绝对不', '从不',
    '一点也不', '一点都不', '丝毫不',
    
    // 疑问否定
    '不是吗', '不对吗', '不会吧', '不可能',
    '难道不是', '难道不会', '岂不是'
  ];
  
  // 大幅扩展疑问词 - 包含更多中文疑问表达
  const questionWords = [
    // 基础疑问词
    '什么', '怎么', '如何', '为什么', '为啥',
    '哪个', '哪些', '哪里', '哪儿', '何时', '何地',
    '多少', '几个', '几', '多久', '多长',
    
    // 方式疑问
    '怎样', '怎么样', '如何是好', '咋办', '咋样',
    
    // 选择疑问
    '还是', '或者', '抑或', '是...还是',
    
    // 反问疑问
    '难道', '岂不是', '不是吗', '对吧', '是不是',
    '对不对', '好不好', '行不行', '可以吗',
    
    // 程度疑问
    '多么', '何等', '何其', '多大', '多小',
    '多快', '多慢', '多高', '多低'
  ];
  
  // 新增：教育场景特定词汇
  const educationKeywords = {
    // 学习相关
    learning: [
      '学习', '学会', '掌握', '理解', '记住', '背诵',
      '复习', '预习', '练习', '作业', '考试', '测试',
      '课程', '课本', '教材', '笔记', '总结'
    ],
    
    // 困难表达
    difficulty: [
      '困难', '难', '不会', '不懂', '不理解',
      '搞不懂', '弄不明白', '看不懂', '记不住',
      '忘了', '混乱', '糊涂', '迷茫'
    ],
    
    // 求助表达
    help: [
      '帮助', '帮忙', '指导', '指点', '提醒',
      '解答', '答疑', '请教', '咨询', '求助'
    ]
  };
  
  /**
   * 获取所有关键词规则
   * @returns {Object} 关键词规则对象
   */
  function getAllRules() {
    return keywordRules;
  }
  
  /**
   * 获取特定分类的规则
   * @param {number} categoryId - 分类ID
   * @returns {Object|null} 分类规则
   */
  function getRuleById(categoryId) {
    return keywordRules[categoryId] || null;
  }
  
  /**
   * 获取所有关键词列表（用于调试）
   * @returns {Array} 所有关键词
   */
  function getAllKeywords() {
    const allKeywords = [];
    Object.values(keywordRules).forEach(rule => {
      allKeywords.push(...rule.keywords);
    });
    return [...new Set(allKeywords)]; // 去重
  }
  
  /**
   * 获取学科相关关键词
   * @param {string} subject - 学科名称
   * @returns {Array} 学科关键词列表
   */
  function getSubjectKeywords(subject) {
    return subjectKeywords[subject] ? 
      Object.values(subjectKeywords[subject]).flat() : [];
  }
  
  /**
   * 验证关键词规则完整性
   * @returns {Object} 验证结果
   */
  function validateRules() {
    const result = {
      valid: true,
      errors: [],
      warnings: [],
      stats: {
        totalCategories: Object.keys(keywordRules).length,
        totalKeywords: getAllKeywords().length,
        totalSubjectKeywords: Object.values(subjectKeywords)
          .map(subject => Object.values(subject).flat().length)
          .reduce((sum, count) => sum + count, 0)
      }
    };
  
    // 检查每个分类的必要字段
    Object.entries(keywordRules).forEach(([id, rule]) => {
      if (!rule.name) {
        result.errors.push(`分类 ${id} 缺少名称`);
        result.valid = false;
      }
      if (!rule.keywords || rule.keywords.length === 0) {
        result.errors.push(`分类 ${id} 缺少关键词`);
        result.valid = false;
      }
      if (!rule.description) {
        result.errors.push(`分类 ${id} 缺少描述`);
        result.valid = false;
      }
      
      // 警告检查
      if (rule.keywords.length < 10) {
        result.warnings.push(`分类 ${id} 关键词数量较少(${rule.keywords.length}个)`);
      }
      if (!rule.semanticPatterns || rule.semanticPatterns.length === 0) {
        result.warnings.push(`分类 ${id} 缺少语义模式`);
      }
    });
  
    // 检查关键词重复
    const keywordCounts = {};
    Object.values(keywordRules).forEach(rule => {
      rule.keywords.forEach(keyword => {
        keywordCounts[keyword] = (keywordCounts[keyword] || 0) + 1;
      });
    });
    
    Object.entries(keywordCounts).forEach(([keyword, count]) => {
      if (count > 1) {
        result.warnings.push(`关键词 "${keyword}" 在多个分类中重复出现 (${count}次)`);
      }
    });
  
    return result;
  }
  
  /**
   * 智能关键词匹配（支持模糊匹配和同义词）
   * @param {string} text - 待匹配文本
   * @param {Array} keywords - 关键词列表
   * @param {Object} options - 匹配选项
   * @returns {Object} 匹配结果
   */
  function smartKeywordMatch(text, keywords, options = {}) {
    const {
      fuzzyThreshold = 0.8,  // 模糊匹配阈值
      enableSynonym = true,  // 启用同义词匹配
      caseSensitive = false  // 大小写敏感
    } = options;
    
    const result = {
      exactMatches: [],
      fuzzyMatches: [],
      synonymMatches: [],
      totalScore: 0
    };
    
    const processedText = caseSensitive ? text : text.toLowerCase();
    
    keywords.forEach(keyword => {
      const processedKeyword = caseSensitive ? keyword : keyword.toLowerCase();
      
      // 精确匹配
      if (processedText.includes(processedKeyword)) {
        result.exactMatches.push(keyword);
        result.totalScore += 1.0;
      }
      // 可以在这里添加模糊匹配和同义词匹配逻辑
    });
    
    return result;
  }
  
  module.exports = {
    keywordRules,
    subjectKeywords,
    negativeWords,
    questionWords,
    educationKeywords,
    getAllRules,
    getRuleById, 
    getAllKeywords,
    getSubjectKeywords,
    validateRules,
    smartKeywordMatch
  };